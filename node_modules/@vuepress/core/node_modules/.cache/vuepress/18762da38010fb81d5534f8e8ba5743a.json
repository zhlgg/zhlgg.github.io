{"remainingRequest":"D:\\wangxiaocs.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\wangxiaocs.github.io\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\wangxiaocs.github.io\\README.md?vue&type=template&id=0290eea1&","dependencies":[{"path":"D:\\wangxiaocs.github.io\\README.md","mtime":1692715846544},{"path":"D:\\wangxiaocs.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692715745030},{"path":"D:\\wangxiaocs.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692715745030},{"path":"D:\\wangxiaocs.github.io\\node_modules\\babel-loader\\lib\\index.js","mtime":1692715745577},{"path":"D:\\wangxiaocs.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1692715742422},{"path":"D:\\wangxiaocs.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1692715745030},{"path":"D:\\wangxiaocs.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1692715742386},{"path":"D:\\wangxiaocs.github.io\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1692715745932}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}